from flask import Flask, render_template, request 
import tensorflow as tf 
from tensorflow.keras.models import load_model 
from tensorflow.keras.preprocessing.image import load_img, img_to_array 
import numpy as np 
import os 

app = Flask(__name__) 
model = load_model('healthy_vs_rotten.h5') 
UPLOAD_FOLDER = 'static/uploads' 
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER 

CLASS_NAMES = ['Healthy', 'Rotten'] 

def prepare_image(img_path): 
    img = load_img(img_path, target_size=(224, 224))  # Change if your model expects different size 
    img_array = img_to_array(img) 
    img_array = img_array / 255.0 
    return np.expand_dims(img_array, axis=0) 

@app.route('/') 
def index(): 
    return render_template('index.html') 

@app.route('/predict', methods=['POST']) 
def predict(): 
    if 'file' not in request.files: 
        return "No file uploaded", 400 
    file = request.files['file'] 
    if file.filename == '': 
        return "Empty filename", 400 

    filepath = os.path.join(app.config['UPLOAD_FOLDER'], file.filename) 
    file.save(filepath) 

    img = prepare_image(filepath) 
    prediction = model.predict(img) 
    predicted_class = CLASS_NAMES[np.argmax(prediction)] 

    return render_template('index.html', prediction=predicted_class, img_path=filepath) 

if __name__ == '__main__': 
    app.run(debug=True) 
